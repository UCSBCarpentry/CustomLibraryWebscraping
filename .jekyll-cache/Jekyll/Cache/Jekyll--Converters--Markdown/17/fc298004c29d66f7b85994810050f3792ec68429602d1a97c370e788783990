I"ô%<h2 id="what-is-web-scraping">What is web scraping?</h2>

<p>Web scraping is a technique for extracting information from websites. This can be done manually
but it is usually faster, more efficient and less error-prone to automate the task.</p>

<p>Web scraping allows you to acquire non-tabular or poorly structured data from websites and convert it 
into a usable, structured format, such as a .csv file or spreadsheet.</p>

<p>Scraping is about more than just acquiring data: it can also help you archive data and track changes to data online.</p>

<p>It is closely related to the practice of
web <em>indexing</em>, which is what search engines like Google do when mass-analysing the Web to build
their indices. But contrary to <em>web indexing</em>, which typically parses the entire content of a web
page to make it searchable, <em>web scraping</em> targets specific information on the pages visited.</p>

<p>For example, online stores will often scour the publicly available pages of their competitors,
scrape item prices, and then use this information to adjust their own prices. Another common
practice is ‚Äúcontact scraping‚Äù in which personal information like email
addresses or phone numbers is collected for marketing purposes.</p>

<p>Web scraping is also increasingly being used by scholars to create data sets for
text mining projects; these might be collections of journal articles or digitised texts. The practice of
<a href="https://en.wikipedia.org/wiki/Data_journalism">data journalism</a>, in particular, relies on the
ability of investigative journalists to harvest data that is not always presented or published in a form
that allows analysis.</p>

<h2 id="before-you-get-started">Before you get started</h2>

<p>As useful as scraping is, there might be better options for the task. Choose the right (i.e. the easiest) tool for the job.</p>

<ul>
  <li>Check whether or not you can easily copy and paste data from a site into Excel or Google Sheets. This might be quicker than scraping.</li>
  <li>Check if the site or service already provides an API to extract structured data. If it does, that will be a much more efficient and effective pathway. Good examples are the 
<a href="https://developers.facebook.com/tools/explorer/">Facebook API</a>, the <a href="https://dev.twitter.com/rest/public">Twitter APIs</a> or the <a href="https://developers.google.com/youtube/v3/docs/commentThreads/list">YouTube comments API</a>.</li>
  <li>For much larger needs, Freedom of information requests can be useful. Be specific about the formats required for the data you want.</li>
</ul>

<h2 id="example-scraping-government-websites-for-contact-addresses">Example: scraping government websites for contact addresses</h2>

<p>In this lesson, we will extract contact information
from government websites that list the members of various constituencies. Librarians could use this example
to scrape informatiomn from any site listing contact details.</p>

<p>Let‚Äôs start by looking at the current list of members of the Canadian parliament, which is available
on the <a href="http://www.parl.gc.ca/Parliamentarians/en/members">Parliament of Canada website</a>.</p>

<p>This is how this page appears in November 2016:</p>

<p><img src="../fig/canparl.png" alt="Screenshot of the Parliament of Canada website" /></p>

<p>There are several features (circled in the image above) that make the data on this page easier to work with.
The search, reorder, refine features and display modes hint that the data is actually stored in a (structured)
database before being displayed on this page. The data can be readily downloaded either as a comma separated values (.csv)
file or as XML for re-use in their own database, spreadsheet or computer program.</p>

<p>Even though the information displayed in the view above is not labelled, anyone visiting this site with some
knowledge of Canadian geography and politics can see what information pertains to the 
politicians‚Äô names, the geographical area they come from and the political party they represent. This is because human
beings are good at using context and prior knowledge to quickly categorise information.</p>

<p>Computers, on the other hand, cannot do this unless we provide them with more information.
Fortunately, if we examine the source HTML code of this page, we can see that the information displayed is actually
organised inside labelled elements:</p>

<div class="output highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(...)
&lt;div&gt;
    &lt;a href="/Parliamentarians/en/members/Ziad-Aboultaif(89156)"&gt; 
        &lt;img alt="Photo - Ziad Aboultaif - Click to open the Member of Parliament profile" title="Photo - Ziad Aboultaif - Click to open the Member of Parliament profile" src="http://www.parl.gc.ca/Parliamentarians/Images/OfficialMPPhotos/42/AboultaifZiad_CPC.jpg" class="picture" /&gt;
        &lt;div class="full-name"&gt;
		    &lt;span class="honorific"&gt;&lt;abbr&gt;&lt;/abbr&gt;&lt;/span&gt;
            &lt;span class="first-name"&gt;Ziad&lt;/span&gt;
            &lt;span class="last-name"&gt;Aboultaif&lt;/span&gt;
        &lt;/div&gt;
    &lt;/a&gt;
    &lt;div class="caucus-banner" style="background-color:#002395"&gt;&lt;/div&gt;
    &lt;div class="caucus"&gt;Conservative&lt;/div&gt;
    &lt;div class="constituency"&gt;Edmonton Manning&lt;/div&gt;
    &lt;div class="province"&gt;Alberta&lt;/div&gt;        
&lt;/div&gt;
(...)
</code></pre></div></div>

<p>Thanks to these labels, we could relatively easily instruct a computer to look for all parliamentarians from
Alberta and list their names and caucus information.</p>

<blockquote class="callout">
  <h2 id="structured-vs-unstructured-data">Structured vs unstructured data</h2>

  <p>When presented with information, human beings are good at quickly categorizing it and extracting the data
that they are interested in. For example, when we look at a magazine rack, provided the titles are written
in a script that we are able to read, we can rapidly figure out the titles of the magazines, the stories they
contain, the language they are written in, etc. and we can probably also easily organize them by topic, 
recognize those that are aimed at children, or even whether they lean toward a particular end of the
political spectrum. Computers have a much harder time making sense of such <em>unstructured</em> data unless
we specifically tell them what elements data is made of, for example by adding labels such as
<em>this is the title of this magazine</em> or <em>this is a magazine about food</em>. Data in which individual elements
are separated and labelled is said to be <em>structured</em>.</p>

</blockquote>

<p>Let‚Äôs look now at the current list of members for the <a href="https://www.parliament.uk/mps-lords-and-offices/mps/">UK House of Commons</a>.</p>

<p><img src="../fig/ukparl.png" alt="Screenshot of the UK House of Commons website" /></p>

<p>This page also displays a list of names, political and geographical affiliation. There is a search box and
a filter option, but no obvious way to download this information and reuse it.</p>

<p>Here is the code for this page:</p>

<div class="output highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(...)
&lt;table&gt;
    &lt;tbody&gt;
        (...)
        &lt;tr id="ctl00_ctl00_(...)_trItemRow" class="first"&gt;
            &lt;td&gt;Aberavon&lt;/td&gt;
            &lt;td id="ctl00_ctl00_(...)_tdNameCellRight"&gt;
                &lt;a id="ctl00_ctl00_(...)_hypName" href="http://www.parliament.uk/biographies/commons/stephen-kinnock/4359"&gt;Kinnock, Stephen&lt;/a&gt;(Labour)
            &lt;/td&gt;
        &lt;/tr&gt;
        (...)
    &lt;/tbody&gt;
&lt;/table&gt;
(...)
</code></pre></div></div>

<p>We see that this data has been structured for displaying purposes (it is arranged in rows inside
a table) but the different elements of information are not clearly labelled.</p>

<p>What if we wanted to download this dataset and, for example, compare it with the Canadian list of MPs
to analyze gender representation, or the representation of political forces in the two groups?
We could try copy-pasting the entire table into a spreadsheet or even manually
copy-pasting the names and parties in another document, but this can quickly become impractical when
faced with a large set of data. What if we wanted to collect this information for every country that
has a parliamentary system?</p>

<p>Fortunately, there are tools to automate at least part of the process. This technique is called
<em>web scraping</em>.</p>

<blockquote>

  <p>‚ÄúWeb scraping (web harvesting or web data extraction) is a computer software technique of 
extracting information from websites.‚Äù
(Source: <a href="https://en.wikipedia.org/wiki/Web_scraping">Wikipedia</a>)</p>

</blockquote>

<p>Web scraping typically targets one web site at a
time to extract unstructured information and put it in a structured form for reuse.</p>

<p>In this lesson, we will continue exploring the examples above and try different techniques to extract
the information they contain. But before we launch into web scraping proper, we need to look
a bit closer at how information is organized within an HTML document and how to build queries to access
a specific subset of that information.</p>

<h1 id="references">References</h1>

<ul>
  <li><a href="https://en.wikipedia.org/wiki/Web_scraping">Web Scraping (Wikipedia)</a></li>
  <li><a href="http://datajournalismhandbook.org/1.0/en/getting_data_3.html">The Data Journalism Handbook: Getting Data from the Web</a></li>
</ul>

:ET